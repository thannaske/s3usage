name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          # Exclude Windows on ARM64 as it's less common
          - goos: windows
            goarch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
        run: |
          # Install required build dependencies for static linking
          sudo apt-get update
          sudo apt-get install -y musl-tools
          
          # Set the output binary name with extension based on OS
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then
            EXT=".exe"
          fi
          
          # Skip non-Linux builds with CGO (they won't work with cross-compilation)
          if [ "${{ matrix.goos }}" != "linux" ]; then
            CGO_ENABLED=0 go build -v -o "s3usage-${{ matrix.goos }}-${{ matrix.goarch }}${EXT}" ./cmd/s3usage
          else
            # For Linux, use musl for static linking with CGO enabled
            CC=musl-gcc go build -v -ldflags="-linkmode external -extldflags '-static'" -o "s3usage-${{ matrix.goos }}-${{ matrix.goarch }}${EXT}" ./cmd/s3usage
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: s3usage-${{ matrix.goos }}-${{ matrix.goarch }}
          path: s3usage-${{ matrix.goos }}-${{ matrix.goarch }}*
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          pattern: s3usage-*
          merge-multiple: true

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true 