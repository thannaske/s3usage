name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        # Only build for amd64 to ensure compatibility with SQLite and older CGO versions
        include:
          - goos: linux
            ext: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: amd64
          # Set CGO_ENABLED=1 for SQLite support
          CGO_ENABLED: 1
        run: |
          if [ "${{ matrix.goos }}" = "linux" ]; then
            # For Linux, use a Docker image with Alpine for static compilation
            docker run --rm \
              -v $(pwd):/src \
              -w /src \
              golang:1.23-alpine \
              sh -c 'apk add --no-cache gcc musl-dev && CGO_ENABLED=1 go build -v -ldflags="-linkmode external -extldflags \"-static\"" -o "s3usage-linux-amd64" ./cmd/s3usage'
                          
          elif [ "${{ matrix.goos }}" = "darwin" ]; then
            # For macOS, disable CGO as cross-compilation with CGO is problematic
            CGO_ENABLED=0 go build -v -o "s3usage-${{ matrix.goos }}-amd64${{ matrix.ext }}" ./cmd/s3usage
          else
            # For Windows, disable CGO as cross-compilation with CGO is problematic
            CGO_ENABLED=0 go build -v -o "s3usage-${{ matrix.goos }}-amd64${{ matrix.ext }}" ./cmd/s3usage
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: s3usage-${{ matrix.goos }}-amd64
          path: s3usage-${{ matrix.goos }}-amd64${{ matrix.ext }}
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          pattern: s3usage-*
          merge-multiple: true

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true 